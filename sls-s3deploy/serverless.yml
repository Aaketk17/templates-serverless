service: sls-bucket-deploy

provider:
  name: aws
  stage: ${opt:stage, "dev"}
  region: ${opt:region, "us-east-2"}
  profile: ${opt:profile, "slsguru"}

custom:
  base: ${self:service}-${self:provider.stage}
  IPSetBucket: "slsguru-guarddutyip"
  IPSetTXTFile: "slsguruIPSet.txt"
  assets:
    auto: true
    targets:
      - bucket:
          Ref: guarddutyIPSetBucket
        files:
          - source: ./
            globs: ${self:custom.IPSetTXTFile}

plugins:
  - serverless-s3-deploy
resources:
  Resources:
    guarddutyIPSetBucket:
        Type: AWS::S3::Bucket
        Properties:
          BucketName: ${self:custom.IPSetBucket}
    guarddutyIPSetBucketPolicy:
      Type: AWS::S3::BucketPolicy
      DependsOn: guarddutyIPSetBucket
      Properties:
        Bucket: ${self:custom.IPSetBucket}
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Sid: Guardduty-S3-Read
              Effect: Allow
              Principal:
                Service: guardduty.amazonaws.com
              Action:
                - s3:GetObject
              Resource: !Join
                - ''
                - - 'arn:aws:s3:::'
                  - Ref: guarddutyIPSetBucket
                  - /*
  Outputs:
    guarddutyIPSetBucket:
      Description: "Guard duty IPSet bucket"
      Value: ${self:custom.IPSetBucket}
    guarddutyIPFile:
      Description: "Guard duty IP File"
      Value: ${self:custom.IPSetTXTFile}
